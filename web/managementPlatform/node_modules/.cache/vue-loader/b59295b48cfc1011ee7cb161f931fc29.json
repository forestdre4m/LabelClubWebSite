{"remainingRequest":"C:\\Users\\FORRE\\Desktop\\LabelClubWebsite\\web\\managementPlatform\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\FORRE\\Desktop\\LabelClubWebsite\\web\\managementPlatform\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\FORRE\\Desktop\\LabelClubWebsite\\web\\managementPlatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\FORRE\\Desktop\\LabelClubWebsite\\web\\managementPlatform\\src\\layout\\navMenu\\vertical.vue?vue&type=template&id=013c443f&scoped=true&","dependencies":[{"path":"C:\\Users\\FORRE\\Desktop\\LabelClubWebsite\\web\\managementPlatform\\src\\layout\\navMenu\\vertical.vue","mtime":1710231443867},{"path":"C:\\Users\\FORRE\\Desktop\\LabelClubWebsite\\web\\managementPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619085956000},{"path":"C:\\Users\\FORRE\\Desktop\\LabelClubWebsite\\web\\managementPlatform\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1671005790000},{"path":"C:\\Users\\FORRE\\Desktop\\LabelClubWebsite\\web\\managementPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619085956000},{"path":"C:\\Users\\FORRE\\Desktop\\LabelClubWebsite\\web\\managementPlatform\\node_modules\\vue-loader\\lib\\index.js","mtime":1671005790000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}